services:
  # Config watcher service
  watcher:
    container_name: config_watcher
    image: ${DOCKER_REGISTRY:-nuniesmith}/watcher:${TAG:-latest}
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        APP_VERSION: ${APP_VERSION:-1.0.0}
        APP_ENV: ${APP_ENV:-production}
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        DOCKER_GID: 986
    environment:
      # Core environment variables
      - APP_VERSION=${APP_VERSION:-1.0.0}
      - APP_ENV=${APP_ENV:-production}
      - DOCKER_COMPOSE_CMD=${DOCKER_COMPOSE_CMD:-docker compose}
      - USER_ID=${USER_ID:-1000}
      - GROUP_ID=${GROUP_ID:-1000}
      - DEBUG=${DEBUG:-false}
      - SERVICES_CONFIG=/app/services.json
      - CONFIG_DIR=/app/config
      - LOCKFILE=/var/run/config_watcher.lock
      - LOG_FILE=/var/log/watcher.log
      - SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY:-}
      - REPO_URL=${REPO_URL:-}
      - BRANCH=${BRANCH:-}
      - WATCH_INTERVAL=${WATCH_INTERVAL:-}
      - USE_DOCKER_COMPOSE=${USE_DOCKER_COMPOSE:-}
      - AUTO_FIX=${AUTO_FIX:-}
      - FIX_PERMISSIONS=${FIX_PERMISSIONS:-}
      - MONITOR_LOGS=${MONITOR_LOGS:-}
      - STARTUP_GRACE_PERIOD=${STARTUP_GRACE_PERIOD:-}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - watcher_data:/app/config
      - watcher_logs:/var/log
    restart: unless-stopped
    healthcheck:
      test: CMD /usr/local/bin/healthcheck.sh
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - watcher_network

networks:
  watcher_network:
    driver: bridge

volumes:
  watcher_data:
    driver: local
  watcher_logs:
    driver: local